/*
 * Credits for the terminal effects:
 * Scanlines/flicker: 	http://aleclownes.com/2017/02/01/crt-display.html
 * Screen turn-off:		https://codepen.io/lbebber/pen/XJRdrV
 * Post-It note:		https://mentormate.com/blog/css-postit-note/
 */
@import url("https://fonts.googleapis.com/css?family=VT323&display=swap");
@import url("https://fonts.googleapis.com/css?family=Share+Tech+Mono&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Permanent+Marker&display=swap");

/*********** VARIABLES *************/

:root {
	--green-color: #5bf870;
	--green-bg: #05321e;
	--red-color: #c0100a;
	--red-bg: #1b0302;
	--blue-color: #a5a5ff;
	--blue-bg: #4242e7;
	--off: #050505;
	--dark: #111;
	--term: "> ";
}

/*********** THEMES  *************/
/** Use --color and --bg in your CSS files to get the active text and bg colour. */
/** One of these theme classes is applied to the <body>, so the whole document uses that theme */

.theme-green {
	--color: var(--green-color);
	--bg: var(--green-bg);
}


/*********** GENERIC STUFF *************/

html {
	font-size: 12px;
	box-sizing: border-box;
}
*,
*:before,
*:after {
	box-sizing: inherit;
}

body {
	background: #111;
	margin: 0;
	overflow: hidden;
	font-family: sans-serif;
}

a {
	outline: none;
}
/*********** INPUT / OUTPUT *************/

#prompt {
	display: none;
}
[contenteditable] {
	caret-color: transparent; /** This hides the default browser caret */
	outline: none;
}
#input {
	position: relative;
	display: block;
	white-space: pre-wrap;
}
/* Inserts the > before terminal input */
#input:before {
	content: var(--term);
}
/* Puts a blinking square after the content as replacement for caret */
#input[contenteditable="true"]:after,
.typer.active:after {
	content: "â– ";
	animation: cursor 1s infinite;
	animation-timing-function: step-end;
	margin-left: 1px;
	line-height: 1rem;
}

/* 
 * This makes the caret (:after) show correctly after the previously typed character.
 * Otherwise the caret is always on new line
 */
[contenteditable="true"] br:last-child {
	display: none;
}

#input.password .char {
	display: none;
}
#input.password:after {
	color: var(--color);
}
#input.password:before {
	color: var(--color);
	content: var(--term) attr(data-pw);
}

.typer {
	word-break: break-all;
}

/*********** PARTS OF THE SCREEN *************/

#monitor {
	margin: 3vmin auto;
	padding: 5.5vmin;
	width: min-content;
	display: flex;
	flex-direction: column;
	align-items: center;
	background: #3f3933;
	border-radius: 0.5rem;
}
#monitor:not(.off) {
	box-shadow: 0.6px 90px 110px -60px var(--bg); /* screen glow */
}
#screen {
	position: relative;
	border: 30px solid transparent;
	/* border-image-source: url(/img/bezel_gray.png); */
	border-image-slice: 30 fill;
	border-image-outset: 0;
	overflow: hidden;
}
/* The screen itself + border */
#crt,
pre {
	font-family: "VT323", monospace;
}
#crt {
	min-width: 80ch; /* This makes 80 monospace characters fit on the screen */
	/* height: calc(80ch * 0.8); */
	height: 100%;
	font-size: max(
		1rem,
		2.2vmin
	); /* Scale the font-size relative to the minimum screen dimension */
	position: relative;
	background: var(--bg);
	background-image: radial-gradient(
		ellipse,
		var(--bg) 0%,
		var(--off) 90%
	);
	animation: on 2s linear;
	transition: all 0.5s;
	overflow: hidden;
}

#crt:after {
	content: " ";
	opacity: 0;
	background: #fff;
	display: block;
	position: absolute;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
	width: 100%;
	height: 100%;
	pointer-events: none;
	z-index: 3;
}


#monitor:not(.off) #crt:before {
	content: " ";
	display: block;
	position: absolute;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
	background: linear-gradient(
		to bottom,
		rgba(18, 16, 16, 0.1) 50%,
		rgba(0, 0, 0, 0.25) 50%
	);
	background-size: 100% 8px;
	z-index: 2;
	pointer-events: none;
	animation: fadeIn 2s;
}



body.fullscreen #crt {
	font-size: 2rem;
	position: fixed;
	width: 100%;
	left: 0;
	top: 0;
	z-index: 999;
}

.fullscreen {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	width: 100%;
	height: 100%;
	overflow: hidden;
}

.terminal {
	position: relative;
	height: 100%;
	padding: 2rem;
	overflow-y: auto;
	overflow-x: hidden;
	word-break: break-word;
	text-transform: uppercase;
	animation: textShadow 4s infinite;
}

.terminal,
.fullscreen {
	color: var(--color);
	text-shadow: 0 0 5px #c8c8c8;
}

::selection {
	background: var(--color);
	color: var(--bg);
	text-shadow: none;
}

/* Scanline moving top to bottom over the screen */
.scanline {
	width: 100%;
	height: 100%;
	z-index: 8;
	background: linear-gradient(
		0deg,
		rgba(0, 0, 0, 0) 0%,
		rgba(255, 255, 255, 0.2) 10%,
		rgba(0, 0, 0, 0.1) 100%
	);
	opacity: 0.1;
	position: absolute;
	bottom: 100%;
	pointer-events: none;
	animation: scanline 10s linear infinite;
}





#fullscreen {
	border: 0.25rem solid var(--dark);
	padding: 1rem;
	background-color: rgb(186, 189, 182);
	transition: opacity 0.5s;
	font-weight: bold;
	line-height: 1rem;
}

/* body.fullscreen #fullscreen {
	position: fixed;
	top: 1rem;
	right: 1rem;
	z-index: 1001;
	transform: rotate(180deg);
	opacity: 0.5;
} */





/*********** MEDIA QUERIES *************/

/* For really small screens, only show fullscreen mode */
@media only screen and (max-width: 425px), (max-height: 425px) {
	#crt {
		position: fixed;
		left: 0;
		top: 0;
		width: 100%;
		height: 100%;
	}

	#controls {
		display: none;
	}
	#slider {
		display: initial;
		position: fixed;
		top: 50%;
		right: 50%;
		opacity: 1;
		transition: top 1s ease-out, right 1s ease-out,
			opacity 1s ease-out;
		animation: glow 3s ease-in-out infinite;
	}
	#slider.on {
		top: 10px;
		right: 10px;
		opacity: 0.2;
		animation: none;
	}
}

/* Some fixes for smaller screens */
@media only screen and (max-width: 768px) {
	.post-it,
	#themes,
	#volume {
		display: none;
	}

	#power {
		width: 100%;
		justify-content: space-around;
	}
}
@media only screen and (min-width: 800px) {
	#themes {
		flex-direction: row;
	}
	.post-it {
		font-size: 2rem;
	}
}

